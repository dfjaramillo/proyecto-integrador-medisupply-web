name: Build and Deploy to Heroku

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            echo "package-lock.json found, running npm ci"
            npm ci
          else
            echo "package-lock.json not found, running npm install"
            npm install --no-audit --prefer-offline
          fi

      - name: Build
        run: npm run build --if-present

      - name: Show dist contents (debug)
        run: |
          echo "Listing dist/ contents"
          ls -la dist || true
          echo "Searching for index.html in dist/"
          if [ -f dist/index.html ]; then
            echo "Found dist/index.html"
          else
            echo "Checking subfolders"
            for d in dist/*; do
              if [ -f "$d/index.html" ]; then
                echo "Found index.html in: $d"
              fi
            done
          fi

  deploy:
    name: Deploy to Heroku
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install-ubuntu.sh | sh

      - name: Set git user
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Add Heroku remote
        run: |
          heroku git:remote -a ${{ secrets.HEROKU_APP_NAME }}

      - name: Push dist/ to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          set -e
          if [ -d dist ]; then
            echo "Pushing dist/ to Heroku (using git subtree)"
            # Ensure we have a commit with dist tracked so subtree can push
            git add -f dist || true
            git commit -m "chore(deploy): dist" || true
            # Try subtree push first
            if git ls-tree --name-only -r HEAD | grep -q "^dist/"; then
              git subtree push --prefix dist heroku main || true
            fi
            # Fallback: push the contents of dist as a fresh repo to heroku
            if [ -d dist ]; then
              echo "Fallback: pushing dist contents directly"
              pushd dist
              git init
              git add -A
              git commit -m "deploy dist" || true
              git push https://heroku:${HEROKU_API_KEY}@git.heroku.com/${HEROKU_APP_NAME}.git main --force
              popd
            fi
          else
            echo "dist/ not found â€” nothing to push"
            exit 1
          fi
