name: CI and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci --prefer-offline --no-audit
          else
            npm install --no-audit --prefer-offline
          fi

      - name: Build
        run: npm run build --if-present

      - name: Run tests with coverage
        env:
          CI: true
        run: npm run test -- --watch=false --browsers=ChromeHeadlessCI --code-coverage

      - name: Check coverage thresholds
        run: |
          echo "Checking code coverage meets 80% threshold..."
          if [ -f coverage/lcov.info ]; then
            echo "Coverage report generated successfully"
          else
            echo "ERROR: Coverage report not found"
            exit 1
          fi

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Show dist (debug)
        run: |
          echo "dist contents:"
          ls -la dist || true

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifact
          path: dist

  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-artifact
          path: dist

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install-ubuntu.sh | sh

      - name: Set git user
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Add Heroku remote
        run: |
          heroku git:remote -a ${{ secrets.HEROKU_APP_NAME }}

      - name: Push source to Heroku (let Heroku build)
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          set -e
          # Using existing Heroku buildpack configuration (do not set buildpack on every deploy)

          # Ensure we are at the checked-out commit (avoid commits created earlier)
          git fetch --all
          git reset --hard ${GITHUB_SHA}

          echo "Pushing repository HEAD to Heroku (Heroku will run build)"
          git push https://heroku:${HEROKU_API_KEY}@git.heroku.com/${HEROKU_APP_NAME}.git HEAD:main --force
